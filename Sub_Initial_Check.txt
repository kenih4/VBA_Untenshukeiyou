Option Explicit
Declare PtrSafe Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)

Sub Initial_Check(BL As Integer)

    On Error GoTo ErrorHandler

    '    Dim BL As Integer
    Dim BNAME_SHUKEI As String
    Dim Cnt As Integer
    Dim result As Boolean

    '    Dim s
    '    s = Application.InputBox("BLを入力して下さい。", "確認", Type:=1)    '  Type:=1 数値のみ
    '    If s = False Then
    '        Exit Sub
    '    ElseIf s = "" Then
    '        MsgBox "何も入力されていません"
    '        Exit Sub
    '    Else
    '        BL = s
    '    End If

    Select Case BL
    Case 1
        Debug.Print "SCSS+"
        BNAME_SHUKEI = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SCSS\SCSS運転状況集計BL1.xlsm"
    Case 2
        Debug.Print "BL2"
        BNAME_SHUKEI = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SACLA\SACLA運転状況集計BL2.xlsm"
    Case 3
        Debug.Print ">>>BL3"
        BNAME_SHUKEI = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SACLA\SACLA運転状況集計BL3.xlsm"
    Case Else
        Debug.Print "Zzz..."
        End
    End Select

    '    BNAME_SHUKEI = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SACLA\SACLA運転状況集計BL2TEST.xlsm"
    MsgBox "マクロ「Initial_Check()」を実行します。" & vbCrLf & "このマクロは、" & vbCrLf & BNAME_SHUKEI & vbCrLf & "のチェックです。" & vbCrLf & "数式が入っているべきセルに数式が入っているか確認します", vbInformation, "BL" & BL

    ' wb_SHUKEIを開く
    Dim wb_SHUKEI As Workbook    ' ちゃんと宣言しないと、関数SheetExistsの引数が異なると怒られる
    Set wb_SHUKEI = OpenBook(BNAME_SHUKEI, True)    ' フルパスを指定
    If wb_SHUKEI Is Nothing Then Call Fin("ブックが開けませんでした。パスの異なる同じ名前のブックが既に開かれてる可能性があります。", 3)
    wb_SHUKEI.Activate
    If ActiveWorkbook.Name <> wb_SHUKEI.Name Then
        Call Fin("現在アクティブなブック名が異常です。終了します。" & vbCrLf & "ActiveWorkbook.Name:  " & ActiveWorkbook.Name & vbCrLf & "BNAME_SHUKEI:  " & BNAME_SHUKEI, 3)
    End If
    wb_SHUKEI.Windows(1).WindowState = xlMaximized

    Debug.Print "シート全体にエラーがないか確認 "
    Dim ws As Worksheet
    For Each ws In wb_SHUKEI.Worksheets
        result = CheckForErrors(ws)
    Next ws



    Cnt = Check(Array(1, 3, 5, 6, 8, 9, 10, 11, 12, 13), 2, 30, wb_SHUKEI.Worksheets("運転予定時間"))
    Cnt = Check(Array(2, 6, 7), 3, 30, wb_SHUKEI.Worksheets("GUN HV OFF時間記録"))
    Cnt = Check(Array(9, 10, 11, 12, 13, 14, 15), 9, 30, wb_SHUKEI.Worksheets("GUN HV OFF時間記録"))
    Cnt = Check(Array(7, 8, 9), 3, 500, wb_SHUKEI.Worksheets("集計記録")) ' とりあえず500行くらいチェック
    Cnt = Check(Array(1, 3, 5, 6, 8, 9, 10, 11, 13, 14), 2, 30, wb_SHUKEI.Worksheets("利用時間（期間）")) ' 利用時間（期間） のカッコは全角
    Cnt = Check(Array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 25), 2, 30, wb_SHUKEI.Worksheets("利用時間(User)"))
    Cnt = Check(Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16), 1, 30, wb_SHUKEI.Worksheets("利用時間(シフト)")) '
    Cnt = Check(Array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 2, 30, wb_SHUKEI.Worksheets("Fault間隔(ユニット)"))
        
    Call Fin("終了しました。" & vbCrLf & "", 1)
    Exit Sub ' 通常の処理が完了したらエラーハンドラをスキップ
ErrorHandler:
    MsgBox "エラーです。内容は　 " & Err.Description, Buttons:=vbCritical
    
End Sub








'後で、要確認！
'VBAでは、明示的に ByVal も ByRef も指定しない場合、デフォルトで ByRef（参照渡し）になります。
'つまり､引数として渡した変数の値が変更される可能性がある ので注意が必要です｡
'Function Check(arr As Variant, ByVal Retsu_for_Find_last_row As Integer, ByVal Check_row_cnt As Integer, ByVal sheet As Worksheet) As Integer
' StartL , EndLを引数にした方がいい気がする
Function Check(arr As Variant, Retsu_for_Find_last_row As Integer, Check_row_cnt As Integer, sheet As Worksheet) As Integer
' arr:  チェックする列を配列にセット
' Retsu_for_Find_last_row:  値の入っている最終行を取得するためのもの。数式が入っていない列を指定する。数式が入っている列を指定すると数式が入っていない最終行になってしまう
' Check_row_cnt:    何行チェックするか。とりあえず多めにしとく
    Debug.Print "DEBUG  Start Function Check()-------------"
    Dim result As Boolean
    Dim StartL As Integer
    Dim i As Integer
    Dim col As Variant
    Check = 0
    sheet.Activate

    '    MsgBox "Columns(Retsu_for_Find_last_row).Address　=     " & Columns(Retsu_for_Find_last_row).Address

    '    StartL = sheet.Range("B:B").Find(What:="*", LookIn:=xlValues, SearchOrder:=xlByRows, SearchDirection:=xlPrevious).Row + 1  ' 罫線は無視
    '    StartL = sheet.Range("A:A").Find(What:="*", LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlPrevious).Row + 1 ' この方法だと罫線も含んだ最終行になってしまう
    '    StartL = sheet.Cells(Rows.Count, Retsu_for_Find_last_row).End(xlUp).Row + 1
    '    StartL = sheet.Range(Columns(Retsu_for_Find_last_row).Address).Find(What:="*", LookIn:=xlValues, SearchOrder:=xlByRows, SearchDirection:=xlPrevious).Row + 1 ' なぜか　シート「利用時間(User)」だけ、「オブジェクト変数またはWithブロック変数が設定されていません」のエラー  問題はここ　Columns(Retsu_for_Find_last_row).Address
    StartL = sheet.Range(sheet.Columns(Retsu_for_Find_last_row).Address).Find(What:="*", LookIn:=xlValues, SearchOrder:=xlByRows, SearchDirection:=xlPrevious).Row + 1    ' TEST

    sheet.Cells(StartL, arr(0)).Select
    MsgBox "シート「" & sheet.Name & "」のここから、この行に入っている数式が以降 " & Check_row_cnt & " 行に渡って入っているかチェックを始めます。", vbInformation

    For Each col In arr
        For i = StartL + 1 To StartL + Check_row_cnt
            sheet.Cells(i, col).Select
            'Sleep 20 ' msec
            result = CheckSameFormulaType(Cells(StartL, col), Cells(i, col))
            If result = True Then
                Debug.Print "OK:    セル(" & i & ", " & col & ") 数式有  " & Cells(i, col).Formula
                'Cells(i, col).Interior.Color = RGB(0, 255, 0)
            Else
                Debug.Print "要確認！　セル(" & i & ", " & col & ") 数式が入っていないか、数式が異なる"
                Cells(i, col).Interior.Color = RGB(255, 0, 0)
                Check = Check + 1
            End If
        Next
    Next col
    If Check <> 0 Then
        MsgBox "シート「" & sheet.Name & "」にて、" & vbCrLf & "数式が入っていないか、数式が異なるセルが " & Check & " 箇所、見つかりました！！要確認です", vbCritical
    End If

End Function




Function CheckSameFormulaType(rng1 As Range, rng2 As Range) As Boolean
' セルに数式が入っているか確認
    If rng1.HasFormula And rng2.HasFormula Then
        'Debug.Print "どちらかのセルに数式があり"
        ' R1C1形式で比較して、一致すれば True、異なれば False
        CheckSameFormulaType = (rng1.FormulaR1C1 = rng2.FormulaR1C1)
    Else
        'Debug.Print "どちらかのセルに数式が無し"
        CheckSameFormulaType = False
    End If
End Function






