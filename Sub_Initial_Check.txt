Declare PtrSafe Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)

Sub Initial_Check()

    On Error GoTo ErrorHandler
               
    Dim BL As Integer
    Dim BNAME_SHUKEI As String
    Dim DOWNTIME_ROW As Integer
    Dim Unit As String
    Dim tmp As String
    
    Dim Sname As String
    Dim Cnt As Integer
    Dim Check_row_cnt As Integer
    Dim StartL As Integer
    
    Dim Check_col_arr As Variant
    Dim result As Boolean
    

'
'    Dim s
'    s = Application.InputBox("BLを入力して下さい。", "確認")
'    If s = False Then
'        Exit Sub
'    ElseIf s = "" Then
'        MsgBox "何も入力されていません"
'        Exit Sub
'    Else
'        BL = s
'    End If
'
'    Select Case BL
'        Case 1
'            Debug.Print "SCSS+"
'            BNAME_SHUKEI = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SCSS\SCSS運転状況集計BL1.xlsm"
'        Case 2
'            Debug.Print "BL2"
'            BNAME_SHUKEI = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SACLA\SACLA運転状況集計BL2.xlsm"
'            DOWNTIME_ROW = 8
'        Case 3
'            Debug.Print ">>>BL3"
'            BNAME_SHUKEI = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SACLA\SACLA運転状況集計BL3.xlsm"
'            DOWNTIME_ROW = 9
'        Case Else
'            Debug.Print "Zzz..."
'            End
'    End Select
    
    BNAME_SHUKEI = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SACLA\SACLA運転状況集計BL2TEST.xlsm"
    MsgBox "マクロ「Initial_Check()」を実行します。" & vbCrLf & "このマクロは、" & vbCrLf & BNAME_SHUKEI & vbCrLf & "のチェックです。" & vbCrLf & "数式が入っているべきセルに数式が入っているか確認します", vbInformation, "BL" & BL

    ' wb_SHUKEIを開く
    Dim wb_SHUKEI As Workbook    ' ちゃんと宣言しないと、関数SheetExistsの引数が異なると怒られる
    Set wb_SHUKEI = OpenBook(BNAME_SHUKEI, True) ' フルパスを指定
    If wb_SHUKEI Is Nothing Then Call Fin("ブックが開けませんでした。パスの異なる同じ名前のブックが既に開かれてる可能性があります。", 3)
    wb_SHUKEI.Activate
    If ActiveWorkbook.Name <> wb_SHUKEI.Name Then
        Call Fin("現在アクティブなブック名が異常です。終了します。" & vbCrLf & "ActiveWorkbook.Name:  " & ActiveWorkbook.Name & vbCrLf & "BNAME_SHUKEI:  " & BNAME_SHUKEI, 3)
    End If
    wb_SHUKEI.Windows(1).WindowState = xlMaximized





    Sname = "運転予定時間"
    wb_SHUKEI.Worksheets(Sname).Activate
    Cnt = 0
    Check_row_cnt = 50 'とりあえず50行もチェックすれば十分
    Check_col_arr = Array(1, 3, 5, 6, 8, 9, 10, 11, 12, 13) ' チェックする列を配列にセット
    StartL = wb_SHUKEI.Worksheets(Sname).Cells(Rows.Count, "B").End(xlUp).Row + 1 ' 数式が入っていないB列を指定する。数式が入っているA列を指定すると数式が入っていない最終行になってしまう
    wb_SHUKEI.Worksheets(Sname).Cells(StartL, Check_col_arr(0)).Select
    MsgBox "シート「" & Sname & "」のここから、この行に入っている数式が以降 " & Check_row_cnt & " 行に渡って入っているかチェックを始めます。", vbInformation, "BL" & BL
    For Each col In Check_col_arr
        For i = StartL + 1 To StartL + Check_row_cnt
            wb_SHUKEI.Worksheets(Sname).Cells(i, col).Select
            Sleep 20 ' 20msec
            result = CheckSameFormulaType(Cells(StartL, col), Cells(i, col))
            If result = True Then
                Debug.Print "OK:    セル(" & i & ", " & col & ") 数式有  " & Cells(i, col).Formula
            Else
                Debug.Print "要確認！　セル(" & i & ", " & col & ") 数式が入っていないか、数式が異なる"
                Cells(i, col).Interior.Color = RGB(255, 0, 0)
                Cnt = Cnt + 1
            End If
        Next
    Next col
    If Cnt <> 0 Then
        MsgBox "シート「" & Sname & "」にて、" & vbCrLf & "数式が入っていないか、数式が異なるセルが " & Cnt & " 箇所、見つかりました！！要確認です", vbCritical, "BL" & BL
    End If

    
    
    
        
        
    Call Fin("終了しました。" & vbCrLf & "", 1)
    Exit Sub ' 通常の処理が完了したらエラーハンドラをスキップ
ErrorHandler:
    MsgBox "エラーです。内容は　 " & Err.Description, Buttons:=vbCritical
    
End Sub







Function CheckSameFormulaType(rng1 As Range, rng2 As Range) As Boolean
    ' セルに数式が入っているか確認
    If rng1.HasFormula And rng2.HasFormula Then
        ' R1C1形式で比較して、一致すれば True、異なれば False
        CheckSameFormulaType = (rng1.FormulaR1C1 = rng2.FormulaR1C1)
    Else
        ' どちらかのセルに数式がない場合は False
        CheckSameFormulaType = False
    End If
End Function


