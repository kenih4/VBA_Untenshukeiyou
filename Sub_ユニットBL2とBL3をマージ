Sub ユニットBL2とBL3をマージ()

    Dim TargetUnit As String
    Dim Sonzai_flg_BL2 As Boolean: Sonzai_flg_BL2 = False
    Dim Sonzai_flg_BL3 As Boolean: Sonzai_flg_BL3 = False
       
'    BNAME_MATOME = "C:\Users\kenichi\Dropbox\gitdir\VBA運転集計用\SACLA運転状況集計まとめTEST.xlsm"
    BNAME_MATOME = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SACLA\SACLA運転状況集計まとめ.xlsm"
    Set wb_MATOME = Workbooks.Open(BNAME_MATOME, ReadOnly:=False)
    wb_MATOME.Worksheets("Fault集計").Activate 'これ大事
    wb_MATOME.Worksheets("Fault集計").Cells(1, 1).Select ' 選択範囲が残ってるの気持ち悪いのでとりあえず
    If InStr(ActiveWorkbook.name, BNAME_MATOME) Then
        MsgBox "現在アクティブなブック名が異常です。終了します。" & vbCrLf & "ActiveWorkbook.Name:  " & ActiveWorkbook.name & vbCrLf & "BNAME_SHUKEI:  " & BNAME_SHUKEI, Buttons:=vbCritical
        End
    End If
    
    
    For i = 1 To Sheets.Count
        Debug.Print Sheets(i).name
        If Sheets(i).name = "まとめ " Then 'シート「まとめ 」の次のシートが対象となるユニット
            TargetSheet = Sheets(i + 1).name
            Debug.Print "Hit-------" & TargetSheet
            Exit For
        End If
    Next
    Debug.Print "TargetSheet = " & TargetSheet
    
    
    
    
    '「ユニット(BL*)」というパターン表現の場合次ぎすすむ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Dim Hakken As Boolean
    Dim regex As Object
    Dim testString As String
    Dim matches As Object
    Dim match As Object
    Dim pattern As String
    Hakken = False

    ' 検索したい文字列
    testString = TargetSheet

    ' 正規表現オブジェクトの作成
    Set regex = CreateObject("VBScript.RegExp")

    
'    pattern = "\d+-\d+\(BL\d\)"  ' 正規表現パターンの設定（部分一致を含む）
    pattern = "^\d-\d\(BL\d\)$"  ' 正規表現パターンの設定（完全一致）

    ' 正規表現のプロパティを設定
    With regex
        .Global = True         ' すべての一致を検索
        .IgnoreCase = True     ' 大文字と小文字を区別しない
        .pattern = pattern     ' 検索パターンを指定
    End With

    ' 文字列内の一致を検索
    Set matches = regex.Execute(testString)

    ' 一致した結果を表示
    For Each match In matches
        Debug.Print "見つかったパターン: " & match.Value
        Hakken = True
    Next match

    ' オブジェクトのクリーンアップ
    Set regex = Nothing
    Set matches = Nothing
    
    If Hakken = False Then
        MsgBox "まとめシートの次のシート名が、" & vbCrLf & "「" & TargetSheet & "」" & vbCrLf & "です。" & vbCrLf & "「ユニット(BL*)」というパターン表現ではありません。" & vbCrLf & "ユニット(BL2)とユニット(BL3)とう名前のシートを結合したいのでこれではできません。" & vbCrLf & " 終了します。", Buttons:=vbExclamation
        End
    End If
    
    '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    
    
    
    
    
    
    Dim tmp As Variant
    tmp = Split(TargetSheet, "(")
    Debug.Print "UBound(tmp) = " & UBound(tmp)
'    If UBound(tmp) = 0 Then 'シート「まとめ」の次のシートがユニット名だけの場合（ (BL2)とか(BL3)とかない場合）
'        MsgBox "既にマージされてませんか？？　" & vbCrLf & " 終了します。", Buttons:=vbExclamation
        'End
'    End If

    TargetUnit = tmp(0)
    Debug.Print "TargetUnit=" & TargetUnit
    
    If MsgBox("このマクロは「SACLA運転状況集計まとめ.xlsm」の" & vbCrLf & "シート「ユニット(BL2)と(BL3)」を結合します。" & vbCrLf & "結合しようとしているユニットは「" & TargetUnit & "」です。" & vbCrLf & "いいですか？？", vbYesNo + vbQuestion, "確認") = vbNo Then
        End
    End If
    
    
    For Each A In Sheets
        'Debug.Print "A  name   " & A.Name
        'BL2シートの存在確認
        If A.name = TargetUnit & "(BL2)" Then
            Debug.Print "*BL2 sheet  name:   " & A.name
            Sonzai_flg_BL2 = True
        End If
        
        'BL3シートの存在確認
        If A.name = TargetUnit & "(BL3)" Then
            Debug.Print "*BL3 sheet  name:   " & A.name
            Sonzai_flg_BL3 = True
        End If
       
        '結合されたシートの存在確認
        If A.name = TargetUnit Then
           If MsgBox("既に結合されたシートが存在します。" & vbCrLf & " シートを削除しますか？", vbYesNo + vbQuestion, "newunit") = vbYes Then
                wb_MATOME.Worksheets(TargetUnit).Select
                wb_MATOME.Worksheets(TargetUnit).Delete
            Else
                MsgBox "終了します。" & vbCrLf & " 既に存在する結合されたシートを確認して下さい", Buttons:=vbExclamation
                End
            End If
        End If
    Next
    
    If Not Sonzai_flg_BL2 Or Not Sonzai_flg_BL3 Then
        MsgBox "ユニット(BL2) または ユニット(BL3) のシートが出来てません。" & vbCrLf & " 終了します。", Buttons:=vbExclamation
        End
    End If
    

    
    
    'BL2のシートをコピーしてベースにする
    wb_MATOME.Worksheets(TargetUnit & "(BL2)").Copy after:=wb_MATOME.Worksheets("まとめ ")
    ActiveSheet.name = TargetUnit
        



    
    '(a)運転時間　期間毎  の部分の処理
    wb_MATOME.Worksheets(TargetUnit & "(BL3)").Activate ' これ大事　これしないと .Selectできない
    wb_MATOME.Worksheets(TargetUnit & "(BL3)").Range("I9:L9").Copy
    wb_MATOME.Worksheets(TargetUnit & "(BL3)").Range("I9:L9").Select
    If MsgBox("選択されてる部分をコピーしました。シート「" & TargetUnit & "」" & vbCrLf & "に張り付けます。" & vbCrLf & "いいです？", vbYesNo + vbQuestion, "確認") = vbYes Then
        wb_MATOME.Worksheets(TargetUnit).Activate
        wb_MATOME.Worksheets(TargetUnit).Range("I9").PasteSpecial Paste:=xlPasteValues
        MsgBox "貼り付けました。" & vbCrLf & "次に進みます。", Buttons:=vbInformation
    End If
    
    
    '(b)運転時間　シフト毎  の部分の処理
    'MsgBox getLineNum("(b-2)BL3", 2, wb_MATOME.Worksheets(TargetUnit & "(BL3)"))
    'MsgBox getLineNum("(c)運転条件", 2, wb_MATOME.Worksheets(TargetUnit & "(BL3)"))
    wb_MATOME.Worksheets(TargetUnit & "(BL3)").Activate ' これ大事　これしないと .Selectできない
    wb_MATOME.Worksheets(TargetUnit & "(BL3)").Rows(getLineNum("(b-2)BL3", 2, wb_MATOME.Worksheets(TargetUnit & "(BL3)")) & ":" & getLineNum("(c)運転条件", 2, wb_MATOME.Worksheets(TargetUnit & "(BL3)")) - 1).Copy
    wb_MATOME.Worksheets(TargetUnit & "(BL3)").Rows(getLineNum("(b-2)BL3", 2, wb_MATOME.Worksheets(TargetUnit & "(BL3)")) & ":" & getLineNum("(c)運転条件", 2, wb_MATOME.Worksheets(TargetUnit & "(BL3)")) - 1).Select
    If MsgBox("選択されてる部分をコピーしました。シート「" & TargetUnit & "」" & vbCrLf & "に張り付けます。" & vbCrLf & "いいです？", vbYesNo + vbQuestion, "確認") = vbYes Then
        wb_MATOME.Worksheets(TargetUnit).Activate
        wb_MATOME.Worksheets(TargetUnit).Cells(getLineNum("(c)運転条件", 2, wb_MATOME.Worksheets(TargetUnit)) - 1, 1).Insert xlDown
        wb_MATOME.Worksheets(TargetUnit).Cells(getLineNum("(b-2)BL3", 2, wb_MATOME.Worksheets(TargetUnit)), 2).Select
        MsgBox "貼り付けました。" & vbCrLf & "次に進みます。", Buttons:=vbInformation
    End If

    '(c)運転条件　  の部分の処理
    wb_MATOME.Worksheets(TargetUnit & "(BL3)").Activate ' これ大事　これしないと .Selectできない
    MaxRow = wb_MATOME.Worksheets(TargetUnit & "(BL3)").UsedRange.Rows(wb_MATOME.Worksheets(TargetUnit & "(BL3)").UsedRange.Rows.Count).Row 'UsedRangeの注意点　罫線なども含んだ使用されている領域
    wb_MATOME.Worksheets(TargetUnit & "(BL3)").Rows(getLineNum("(c-2)BL3", 2, wb_MATOME.Worksheets(TargetUnit & "(BL3)")) & ":" & MaxRow - 1).Copy
    wb_MATOME.Worksheets(TargetUnit & "(BL3)").Rows(getLineNum("(c-2)BL3", 2, wb_MATOME.Worksheets(TargetUnit & "(BL3)")) & ":" & MaxRow - 1).Select
    If MsgBox("選択されてる部分をコピーしました。シート「" & TargetUnit & "」" & vbCrLf & "に張り付けます。" & vbCrLf & "いいです？", vbYesNo + vbQuestion, "確認") = vbYes Then
        wb_MATOME.Worksheets(TargetUnit).Activate
        MaxRow_of_TargetUnit = wb_MATOME.Worksheets(TargetUnit).UsedRange.Rows(wb_MATOME.Worksheets(TargetUnit).UsedRange.Rows.Count).Row
        wb_MATOME.Worksheets(TargetUnit).Cells(MaxRow_of_TargetUnit + 1, 1).Insert xlDown
        wb_MATOME.Worksheets(TargetUnit).Cells(getLineNum("(c-2)BL3", 2, wb_MATOME.Worksheets(TargetUnit)), 2).Select
        MsgBox "貼り付けました。" & vbCrLf & "。", Buttons:=vbInformation
    End If


    'wb_MATOME.Worksheets(TargetUnit).ResetAllPageBreaks ' 全ての改ページをクリア
    wb_MATOME.Worksheets(TargetUnit).PageSetup.PrintArea = False ' 全ての印刷範囲をクリア

    
    MsgBox "これで終了です。" & vbCrLf & "シート「ユニット(BL*)」は手動で削除して下さい", Buttons:=vbInformation

End Sub
