Sub マクロいろいろxlsmからSACLA運転状況集計BLxlsmにマクロを流し込んで実行()
    On Error GoTo ErrorHandler
    Debug.Print "Debug   マクロいろいろxlsmからSACLA運転状況集計BLxlsmにマクロを流し込んで実行"
        
    Dim result As Boolean
    Dim wb As Workbook
    Dim sourceWorkbook As Workbook
    Dim targetWorkbook As Workbook
    Dim sourceModule As Object
    Dim targetModule As Object
       
    Dim BL As Integer
    Dim BNAME_SHUKEI As String
    Dim macroName As String
        
    Dim dict As Dictionary
    Set dict = New Dictionary
    dict.Add "Fault集計m", "Module10"
    dict.Add "運転集計_形式処理m", "Module11"

    Dim buttonName As String
    If TypeName(Application.Caller) = "String" Then
        buttonName = Application.Caller
    Else
        MsgBox "このマクロはシート上のボタンからのみ実行してください。" & vbCrLf & "終了します。", Buttons:=vbCritical
        End
    End If
    
    If buttonName = "ボタン 1" Then
        BL = 2
        macroName = "Fault集計m"
    ElseIf buttonName = "ボタン 2" Then
        BL = 2
        macroName = "運転集計_形式処理m"
    ElseIf buttonName = "ボタン 4" Then
        BL = 3
        macroName = "Fault集計m"
    ElseIf buttonName = "ボタン 5" Then
        BL = 3
        macroName = "運転集計_形式処理m"
    Else
        MsgBox "異常です。終了します。" & vbCrLf & "buttonName = " & buttonName, Buttons:=vbCritical
        End
    End If
    
    BNAME_SHUKEI = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SACLA\SACLA運転状況集計BL" & BL & ".xlsm"

        
    
    ' BNAME_SOURCEを開く
    For Each wb In Workbooks ' 開いているブックの中に指定されたパスのブックがあるかを確認
        If wb.FullName = BNAME_SOURCE Then
            Set sourceWorkbook = wb
            Exit For
        End If
    Next wb
    If sourceWorkbook Is Nothing Then ' sourceWorkbook が Nothing の場合、ブックは開かれていないので新たに開く
        Set sourceWorkbook = Workbooks.Open(BNAME_SOURCE, ReadOnly:=False)
    End If
    Debug.Print "Debug   sourceWorkbook.Name =  " & sourceWorkbook.Name & "を開きました"
    For Each vbComp In sourceWorkbook.VBProject.VBComponents
        Debug.Print "Debug   vbComp.name =  " & vbComp.Name & "     vbComp.Type: " & vbComp.Type
    Next vbComp
    Set sourceModule = sourceWorkbook.VBProject.VBComponents(dict(macroName)) ' モジュール名を確認       Module10 = Fault集計m()
    
    
    ' BNAME_SHUKEIを開く
    For Each wb In Workbooks ' 開いているブックの中に指定されたパスのブックがあるかを確認
        If wb.FullName = BNAME_SHUKEI Then
            Set targetWorkbook = wb
            Exit For
        End If
    Next wb
    If targetWorkbook Is Nothing Then ' targetWorkbook が Nothing の場合、ブックは開かれていないので新たに開く
        Set targetWorkbook = Workbooks.Open(BNAME_SHUKEI, ReadOnly:=False)
    End If
    Debug.Print "Debug   targetWorkbook.Name =  " & targetWorkbook.Name & "を開きました"
    targetWorkbook.Windows(1).WindowState = xlMaximized
    result = CheckAndDeleteModuleContainingMacro(BNAME_SHUKEI, macroName) 'マクロmacroNameが、BNAME_SHUKEIに存在したら、削除する
    If result Then
        MsgBox "マクロ 「" & macroName & "」 は " & vbCrLf & BNAME_SHUKEI & " に存在したので、一旦、モジュールを削除して、" & vbCrLf & "マクロを流し込みます。。", Buttons:=vbInformation
    Else
        MsgBox "マクロ 「" & macroName & "」 を " & vbCrLf & BNAME_SHUKEI & " " & vbCrLf & "に流し込みます。", Buttons:=vbInformation
    End If
    
    
    '__________________________________________________________________________________________
    '   End ' 流し込んだマクロが意図せず残ってしまった場合、ここでENDすると削除できる
    '------------------------------------------------------------------------------------------
    



    
    Set targetModule = targetWorkbook.VBProject.VBComponents.Add(1) ' vbext_ct_StdModule = 1  標準モジュールを追加
    targetModule.CodeModule.AddFromString sourceModule.CodeModule.Lines(1, sourceModule.CodeModule.CountOfLines)
    
    If MsgBox("流し込んだマクロを実行します。" & vbCrLf & "いいですか？？", vbYesNo + vbQuestion, "確認") = vbYes Then
        Application.Run "'" & targetWorkbook.Name & "'!" & macroName, BL
        MsgBox "マクロ「" & macroName & "」 が実行されました！", Buttons:=vbInformation
        Debug.Print "マクロ「" & macroName & "」 が実行されました！"
    End If


    'マクロmacroNameを片づける
    result = CheckAndDeleteModuleContainingMacro(BNAME_SHUKEI, macroName)
    
    ' ワークブックを閉じる
    'sourceWorkbook.Close SaveChanges:=False
    'targetWorkbook.Close SaveChanges:=True
    
    Debug.Print "終了"

    Exit Sub  ' 通常の処理が完了したらエラーハンドラをスキップ
ErrorHandler:
    MsgBox "エラーです。内容は　 " & Err.Description, Buttons:=vbCritical
    
End Sub





'マクロmacroNameが、workbookNameに存在するか確認して「モジュール」を削除する  返り値が欲しいのでFunctionにした===========================================================================
Function CheckAndDeleteModuleContainingMacro(WorkBookName As String, macroName As String) As Boolean
    Dim targetWorkbook As Workbook
    Dim vbComponent As VBIDE.vbComponent
    Dim exists As Boolean

    ' 指定したブックを設定
    On Error Resume Next
    Set targetWorkbook = Workbooks.Open(WorkBookName) ' 指定したブック名で開いているか確認
    targetWorkbook.Windows(1).WindowState = xlMaximized
    On Error GoTo 0

    If targetWorkbook Is Nothing Then
        MsgBox "指定したブック '" & WorkBookName & "' が開いていません。"
        CheckAndDeleteModuleContainingMacro = False
        Exit Function
    End If

    ' モジュールをループ
    exists = False
    For Each vbComponent In targetWorkbook.VBProject.VBComponents
        If vbComponent.Type = vbext_ct_StdModule Or vbComponent.Type = vbext_ct_ClassModule Then
            ' モジュールが空でない場合のみ確認
            If vbComponent.CodeModule.CountOfLines > 0 Then
                ' モジュールのコードを確認
                If InStr(vbComponent.CodeModule.Lines(1, vbComponent.CodeModule.CountOfLines), "Sub " & macroName & "(") > 0 Then
                    exists = True
                    ' モジュールを削除
                    targetWorkbook.VBProject.VBComponents.Remove vbComponent
                    Exit For
                End If
            End If
        End If
    Next vbComponent

    ' 結果を表示
'    If exists Then
'        MsgBox "マクロ 「" & macroName & "」 は " & vbCrLf & workbookName & " に存在したので、モジュールを削除します。", Buttons:=vbInformation
'    Else
'        MsgBox "マクロ 「" & macroName & "」 は " & vbCrLf & workbookName & " に存在しませんでした。", Buttons:=vbInformation
'    End If

    ' existsの結果を返す
    CheckAndDeleteModuleContainingMacro = exists
End Function




