Option Explicit

Sub cp_paste_KEIKAKUZIKAN_UNTENZYOKYOSYUKEI()
    On Error GoTo ErrorHandler

    Dim arr() As String
    Dim BNAME_KEIKAKU As String
    Dim BNAME_SHUKEI As String
    Dim SNAME_KEIKAKU_BL As String
    Dim sname As String
    Dim RANGE_GUN_HV_OFF As String
    Dim COL_GUN_HV_OFF As Integer
    Dim targetline As Integer
    Dim BL As Integer
    
    BNAME_KEIKAKU = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\計画時間.xlsx"

    
    ' Wb_keikakuを開く
    Dim Wb_keikaku As Workbook    ' ちゃんと宣言しないと、関数SheetExistsの引数が異なると怒られる
    Set Wb_keikaku = OpenBook(BNAME_KEIKAKU) ' フルパスを指定
    Wb_keikaku.Activate
    If Wb_keikaku Is Nothing Then Call Fin("ブックが開けませんでした。パスの異なる同じ名前のブックが既に開かれてる可能性があります。", 3)
    If ActiveWorkbook.Name <> Wb_keikaku.Name Then
        Call Fin("現在アクティブなブック名が異常です。終了します。" & vbCrLf & "ActiveWorkbook.Name:  " & ActiveWorkbook.Name & vbCrLf & "BNAME_SHUKEI:  " & BNAME_SHUKEI, 3)
    End If
        
    Wb_keikaku.Windows(1).WindowState = xlMaximized
    Wb_keikaku.Worksheets("GUN HV OFF").Activate
    
    Debug.Print "============================================================================================================"


    Dim buttonName As String
    If TypeName(Application.Caller) = "String" Then
        buttonName = Application.Caller
    Else
        MsgBox "このマクロはシート上のボタンからのみ実行してください。", Buttons:=vbCritical
        End
    End If
    
    If buttonName = "ボタン 6" Then
        BL = 2
    ElseIf buttonName = "ボタン 7" Then
        BL = 3
   Else
        MsgBox "異常です。終了します。" & vbCrLf & "buttonName = " & buttonName, Buttons:=vbCritical
        End
    End If
    MsgBox "「計画時間.xlsx」を「SACLA運転状況集計BL" & BL & ".xlsm」にコピーするマクロです。", vbInformation, "BL" & BL
    
'    Dim s
'    s = Application.InputBox("「計画時間.xlsx」を「SACLA運転状況集計BL" & BL & ".xlsm」にコピーするマクロです。 " & vbCrLf & vbCrLf & "BLを入力して下さい。", "BL" & BL)
'    If s = False Then
'        Exit Sub
'    ElseIf s = "" Then
'        MsgBox "何も入力されていません"
'        Exit Sub
'    Else
'        BL = s
'    End If
    
    Select Case BL
        Case 1
            Debug.Print "SCSS+"
        Case 2
            Debug.Print "BL2"
            BNAME_SHUKEI = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SACLA\SACLA運転状況集計BL2.xlsm"
            SNAME_KEIKAKU_BL = "bl2"
            RANGE_GUN_HV_OFF = "A3:C"
            COL_GUN_HV_OFF = 1
        Case 3
            Debug.Print ">>>BL3"
            BNAME_SHUKEI = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SACLA\SACLA運転状況集計BL3.xlsm"
            SNAME_KEIKAKU_BL = "bl3"
            RANGE_GUN_HV_OFF = "G3:I"
            COL_GUN_HV_OFF = 7
        Case Else
            MsgBox "BLが不正です。終了します。" & vbCrLf & "！", Buttons:=vbInformation
            Exit Sub
    End Select
    


    
    
    
    
    
    
            '「シート GUN HV OFF」をコピーして貼り付け
            Wb_keikaku.Worksheets("GUN HV OFF").Select '最前面に表示
            Wb_keikaku.Worksheets("GUN HV OFF").Activate
            Range(RANGE_GUN_HV_OFF & Cells(Rows.Count, COL_GUN_HV_OFF).End(xlUp).Row).Copy
            Range(RANGE_GUN_HV_OFF & Cells(Rows.Count, COL_GUN_HV_OFF).End(xlUp).Row).Select
            If MsgBox("選択部分をコピーしました。" & vbCrLf & "次に進むにはYes", vbYesNo + vbQuestion, "BL" & BL) = vbNo Then Exit Sub
                        


    
            ' wb_SHUKEIを開く
            Dim wb_SHUKEI As Workbook    ' ちゃんと宣言しないと、関数SheetExistsの引数が異なると怒られる
            Set wb_SHUKEI = OpenBook(BNAME_SHUKEI) ' フルパスを指定
            If wb_SHUKEI Is Nothing Then Call Fin("ブックが開けませんでした。パスの異なる同じ名前のブックが既に開かれてる可能性があります。", 3)
            wb_SHUKEI.Worksheets("GUN HV OFF時間記録").Activate
            wb_SHUKEI.Worksheets("GUN HV OFF時間記録").Range("C5").End(xlDown).Activate       ' セルC5「GUN HV OFF時間」から最終行へ
            targetline = wb_SHUKEI.Worksheets("GUN HV OFF時間記録").Range("C5").End(xlDown).Row + 1
            wb_SHUKEI.Worksheets("GUN HV OFF時間記録").Cells(targetline, 3).Activate
            If MsgBox("ここに値「GUN HV OFF時間」を貼り付けていいですか？", vbYesNo + vbQuestion, "BL" & BL) = vbYes Then
Debug.Print "B4==========================================================================================================="
                
                wb_SHUKEI.Worksheets("GUN HV OFF時間記録").Cells(wb_SHUKEI.Worksheets("GUN HV OFF時間記録").Cells(Rows.Count, 3).End(xlUp).Row + 1, 3).PasteSpecial Paste:=xlPasteValues
                If MsgBox("貼り付けましたがOKですか？？" & vbCrLf & "次に進むにはYes", vbYesNo + vbQuestion, "BL" & BL) = vbNo Then Exit Sub
            End If
    
    Debug.Print "C============================================================================================================"
            
            
            
            '「シート bl*」をコピーして貼り付け
            sname = "運転予定時間"
            Wb_keikaku.Worksheets(SNAME_KEIKAKU_BL).Activate
            Range("A2:C" & Cells(Rows.Count - 1, 1).End(xlUp).Row).Select
            Range("A2:C" & Cells(Rows.Count - 1, 1).End(xlUp).Row).Copy
            If MsgBox("選択部分をコピーしました。" & vbCrLf & "次に進むにはYes", vbYesNo + vbQuestion, "BL" & BL) = vbNo Then Exit Sub
            wb_SHUKEI.Worksheets(sname).Activate
            wb_SHUKEI.Worksheets(sname).Range("B3").End(xlDown).Activate       ' セルB3[運転種別]から最終行へ
            Debug.Print "wb_SHUKEI Last: " & wb_SHUKEI.Worksheets(sname).Range("B3").End(xlDown).Row
            targetline = wb_SHUKEI.Worksheets(sname).Range("B3").End(xlDown).Row + 1
            wb_SHUKEI.Worksheets(sname).Cells(targetline, 2).Activate
            If MsgBox("ここに値を貼り付けていいですか？", vbYesNo + vbQuestion, "BL" & BL) = vbYes Then
                wb_SHUKEI.Worksheets(sname).Cells(targetline, 2).PasteSpecial Paste:=xlPasteValues
            End If


            '「シート bl*の備考列」をコピーして貼り付け
            Wb_keikaku.Worksheets(SNAME_KEIKAKU_BL).Activate
            Range("D2:D" & Cells(Rows.Count - 1, 1).End(xlUp).Row).Select
            Range("D2:D" & Cells(Rows.Count - 1, 1).End(xlUp).Row).Copy
            If MsgBox("選択部分をコピーしました。" & vbCrLf & "次に進むにはYes", vbYesNo + vbQuestion, "BL" & BL) = vbNo Then Exit Sub
            wb_SHUKEI.Worksheets(sname).Activate
            wb_SHUKEI.Worksheets(sname).Range("B3").End(xlDown).Activate       ' セルB3[運転種別]から最終行へ
            wb_SHUKEI.Worksheets(sname).Cells(targetline, 7).Activate
            If MsgBox("ここに値を貼り付けていいですか？", vbYesNo + vbQuestion, "BL" & BL) = vbYes Then
                wb_SHUKEI.Worksheets(sname).Cells(targetline, 7).PasteSpecial Paste:=xlPasteValues
                If MsgBox("貼り付けましたがOKですか？？" & vbCrLf & "次に進むにはYes", vbYesNo + vbQuestion, "BL" & BL) = vbNo Then Exit Sub
            End If
            
            '「新しいユニット名を計算」
            Dim before_unit As String
            Dim latest_unit As Integer
            Dim newunit As String
            wb_SHUKEI.Worksheets(sname).Cells(targetline - 1, 1).Select
            before_unit = wb_SHUKEI.Worksheets(sname).Cells(targetline - 1, 1)
            Debug.Print "before_unit: " & before_unit
            arr = Split(before_unit, "-")
            If Not IsNumeric(arr(1)) Then
                MsgBox "新しいユニット名を見繕うとしましたがユニット名がヘンです。 " & before_unit & vbCrLf & "終了します。", Buttons:=vbInformation
                Exit Sub
            End If
            latest_unit = Val(arr(1))
            latest_unit = latest_unit + 1
            newunit = arr(0) + "-" + CStr(latest_unit)
            Debug.Print "newunit: " & newunit
            wb_SHUKEI.Worksheets(sname).Activate
            wb_SHUKEI.Worksheets(sname).Range("B3").End(xlDown).Activate       ' セルB3[運転種別]から最終行へ
            targetline = wb_SHUKEI.Worksheets(sname).Range("B3").End(xlDown).Row
            wb_SHUKEI.Worksheets(sname).Cells(targetline, 1).Activate
            If MsgBox("ここに新しいユニット " & newunit & "を入れていいですか？？", vbYesNo + vbQuestion, "newunit") = vbYes Then
                wb_SHUKEI.Worksheets(sname).Cells(targetline, 1) = newunit
            End If
            
            
            
            MsgBox "終了しました。" & vbCrLf & "保存してから、" & vbCrLf & "次、getBlFaultSummary.pyに進みましょう！", vbInformation, "BL" & BL
    
    
            If MsgBox("次の準備の為に、 シート「利用時間（期間）」の上の所に、ユニット[" & newunit & "]を入れていいですか？？", vbYesNo + vbQuestion, "newunit") = vbYes Then
                wb_SHUKEI.Worksheets("利用時間（期間）").Range("B2") = newunit
            End If
            
    
    Call Fin("これで終了です。", 1)
    Exit Sub  ' 通常の処理が完了したらエラーハンドラをスキップ
ErrorHandler:
    Call Fin("エラーです。内容は　 " & Err.Description, 3)
    Exit Sub

End Sub

