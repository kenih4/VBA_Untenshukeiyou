Option Explicit

Sub Fault集計m(BL As Integer)

    '/追加部分----------------------------
    Dim i As Integer
    Dim targetline As Integer
    Dim BNAME_SHUKEI As String
    Dim SNAME_FAULT As String
    Const BNAME_MATOME As String = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SACLA\SACLA運転状況集計まとめ.xlsm"
    MsgBox "マクロ「Fault集計m」を実行します。" & vbCrLf & "このマクロは、" & vbCrLf & "SACLA運転状況集計BL" & BL & ".xlsmにシート「Fault集計(BL" & BL & ")」を作るマクロです。", Buttons:=vbInformation

'    Dim s
'    s = Application.InputBox("SACLA運転状況集計BL*.xlsmにシート「Fault集計(BL*)」を作るマクロです。" & vbCrLf & "BLを入力してください", "確認")
'    If s = False Then
'        End
'    ElseIf s = "" Then
'        MsgBox "何も入力されていません"
'        End
'    Else
'        BL = s
'    End If

    Select Case BL
        Case 1
            Debug.Print "SCSS+"
            BNAME_SHUKEI = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SCSS\SCSS運転状況集計BL1.xlsm"
            SNAME_FAULT = "Fault集計(BL1)"
        Case 2
            Debug.Print "BL2"
            BNAME_SHUKEI = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SACLA\SACLA運転状況集計BL2.xlsm"
            SNAME_FAULT = "Fault集計(BL2)"
        Case 3
            Debug.Print ">>>BL3"
            BNAME_SHUKEI = "\\saclaopr18.spring8.or.jp\common\運転状況集計\最新\SACLA\SACLA運転状況集計BL3.xlsm"
            SNAME_FAULT = "Fault集計(BL3)"
        Case Else
            Debug.Print "Zzz..."
            End
    End Select
    
    ' wb_SHUKEIを開く
    Dim wb_SHUKEI As Workbook    ' ちゃんと宣言しないと、関数SheetExistsの引数が異なると怒られる
    Set wb_SHUKEI = OpenBook(BNAME_SHUKEI) ' フルパスを指定
    If wb_SHUKEI Is Nothing Then Call Fin("ブックが開けませんでした。パスの異なる同じ名前のブックが既に開かれてる可能性があります。", 3)
    wb_SHUKEI.Activate
    If ActiveWorkbook.Name <> wb_SHUKEI.Name Then
        Call Fin("現在アクティブなブック名が異常です。終了します。" & vbCrLf & "ActiveWorkbook.Name:  " & ActiveWorkbook.Name & vbCrLf & "BNAME_SHUKEI:  " & BNAME_SHUKEI, 3)
    End If
    
    
    
    wb_SHUKEI.Windows(1).WindowState = xlMaximized
    wb_SHUKEI.Worksheets("Fault間隔(ユニット)").Activate
    wb_SHUKEI.Worksheets("Fault間隔(ユニット)").PageSetup.PrintArea = "" ' 20241113追加　印刷範囲が狭かった場合、範囲外が灰色なので選択しても見えないので印刷範囲をクリア
    '追加部分----------------------------/

    Dim 最終行 As Integer
    
    Call 高速化処理開始

    Application.DisplayAlerts = False  '--- 確認メッセージを非表示
    If SheetDetect(SNAME_FAULT) Then
            wb_SHUKEI.Worksheets(SNAME_FAULT).Delete
    End If
    Application.DisplayAlerts = True   '--- 確認メッセージを表示
    
    ActiveSheet.Copy after:=ActiveSheet 'シートのコピー'
    ActiveSheet.Name = SNAME_FAULT 'シート名変更'
    
    最終行 = Cells(Rows.Count, 8).End(xlUp).Row
    
    Range("A1:R" & 最終行).Value = Range("A1:R" & 最終行).Value '値の代入'
    
    Call Fault_セル結合
    
    Call 空白削除(8, 1000, 7)
    Call Fault_合計セル挿入
    Columns("J:R").Delete
    
    Call 高速化処理終了
        
    '/追加部分----------------------------
    For i = 8 To 10000
       If wb_SHUKEI.Worksheets(SNAME_FAULT).Range("B" & i).Value = wb_SHUKEI.Worksheets("利用時間（期間）").Range("B2") Then
           Debug.Print i & "   Hit " & wb_SHUKEI.Worksheets(SNAME_FAULT).Range("B" & i).MergeArea.Rows.Count
           wb_SHUKEI.Worksheets(SNAME_FAULT).Range("B" & i, "I" & i + wb_SHUKEI.Worksheets(SNAME_FAULT).Range("B" & i).MergeArea.Rows.Count - 1).Select
           wb_SHUKEI.Worksheets(SNAME_FAULT).Range("B" & i, "I" & i + wb_SHUKEI.Worksheets(SNAME_FAULT).Range("B" & i).MergeArea.Rows.Count - 1).Copy
           Exit For
       End If
    Next
    
    If MsgBox("選択されてる部分をコピーしました" & vbCrLf & "次は、「SACLA運転状況集計まとめ.xlsm」の「Fault集計」の張り付けです。" & vbCrLf & "ファイルを開きますか？", vbYesNo + vbQuestion, "確認") = vbYes Then
        
        ' wb_MATOMEを開く
        Dim wb_MATOME As Workbook    ' ちゃんと宣言しないと、関数SheetExistsの引数が異なると怒られる
        Set wb_MATOME = OpenBook(BNAME_MATOME) ' フルパスを指定
        If wb_MATOME Is Nothing Then Call Fin("ブックが開けませんでした。パスの異なる同じ名前のブックが既に開かれてる可能性があります。", 3)
        
        wb_MATOME.Worksheets("Fault集計").Activate 'これ大事
        Select Case BL
            Case 1
                Debug.Print "SCSS+"
            Case 2
                Debug.Print "BL2"
                'TEST   BL2とBL2を同じやり方にしたい    ==============================
'                Dim beginL As Integer
'                Dim endL As Integer
'                beginL = getLineNum("SACLA Fault間隔(BL2)", 2, wb_MATOME.Worksheets("Fault集計"))
'                endL = getLineNum("SACLA Fault間隔(BL3)", 2, wb_MATOME.Worksheets("Fault集計"))
'
'                For i = getLineNum_RS("ユニット", 2, beginL, endL, wb_MATOME.Worksheets("Fault集計")) To wb_MATOME.Worksheets("Fault集計").UsedRange.Rows(wb_MATOME.Worksheets("Fault集計").UsedRange.Rows.Count).Row
'                    Debug.Print "i = " & i & "  " & Cells(i, 2).Value
'                    If IsEmpty(wb_MATOME.Worksheets("Fault集計").Cells(i, 2).Value) And Not wb_MATOME.Worksheets("Fault集計").Cells(i, 2).MergeCells Then
'                        targetline = i
'                        MsgBox "セルが空っぽで、結合されてない、、" & vbCrLf & "", Buttons:=vbInformation
'                        Exit For
'                    End If
'                Next
                
'                End
                'TEST==============================
                For i = 6 To 1000
                            If IsEmpty(wb_MATOME.Worksheets("Fault集計").Cells(i, 2).Value) And Not wb_MATOME.Worksheets("Fault集計").Cells(i, 2).MergeCells Then
                                targetline = i
'                                MsgBox "セルが空っぽで、結合されてない、、" & vbCrLf & "", Buttons:=vbInformation
                                Exit For
                            End If
                Next
            Case 3
                Debug.Print ">>>BL3" 'BL3 の場合はB列の最終行からさかのぼる
                Dim xlLastRow As Long       'Excel自体の最終行
                Dim LastRow As Long         '最終行
'重い           xlLastRow = wb_MATOME.Worksheets("Fault集計").Cells(wb_MATOME.Worksheets("Fault集計").Rows.Count, 1).Row  'Excelの最終行を取得

                xlLastRow = wb_MATOME.Worksheets("Fault集計").UsedRange.Rows(wb_MATOME.Worksheets("Fault集計").UsedRange.Rows.Count).Row 'UsedRangeの注意点　罫線なども含んだ使用されている領域
    
                LastRow = wb_MATOME.Worksheets("Fault集計").Cells(xlLastRow, 2).End(xlUp).Row   'B列の最終行を取得
                targetline = LastRow + wb_MATOME.Worksheets("Fault集計").Cells(LastRow, 2).MergeArea.Rows.Count
            Case Else
                Debug.Print "Zzz..."
                End
        End Select
        
        wb_MATOME.Worksheets("Fault集計").Cells(targetline, 2).Select
        If MsgBox("ここに貼り付けします。" & vbCrLf & "いいですか？？", vbYesNo + vbQuestion, "確認") = vbYes Then
            wb_MATOME.Worksheets("Fault集計").Cells(targetline, 2).Insert xlDown
        End If
    
    End If
    
    MsgBox "マクロ終了" & vbCrLf & "次はマクロ「運転集計_形式処理m」をしましょう！", Buttons:=vbInformation

    '追加部分----------------------------/
    
End Sub








